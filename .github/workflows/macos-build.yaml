name: macos-build

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      # 1) 使用触发的 ref（tag/branch），避免强制 master
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # 2) 计算 Release 用的 tag：推 tag 用真实 tag；手动触发用 FIXED_VERSION
      - name: Compute release tag
        id: meta
        shell: bash
        env:
          FIXED_VERSION: "1.0.0"
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=v${FIXED_VERSION}" >> $GITHUB_OUTPUT
          fi

      # 3) 安装 Flutter（稳定分支）；macOS Runner 自带 Xcode & CocoaPods
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.22.x'
          cache: true

      # 4) 启用 macOS 桌面
      - name: Enable Flutter Desktop (macOS)
        run: flutter config --enable-macos-desktop

      # 5) 拉包
      - name: Restore packages
        run: |
          cd simple_live_app
          flutter pub get

      # 6) 打包工具：appdmg & flutter_distributor
      - name: Install packaging tools
        run: |
          npm install -g appdmg
          dart pub global activate flutter_distributor

      # 7) 构建并打包 macOS（同时产出 dmg 与 zip）
      - name: Build macOS (DMG & ZIP)
        run: |
          cd simple_live_app
          # 如需先编译一次（可选）：flutter build macos --release
          flutter_distributor package --platform macos --targets dmg,zip --skip-clean

      # 8) 上传构建产物到 Artifacts
      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: |
            simple_live_app/build/dist/*/*.dmg
            simple_live_app/build/dist/*/*.zip

      # 9) 发布到 GitHub Release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.tag }}
          body: "macOS build ${{ steps.meta.outputs.tag }}"
          prerelease: true
          files: |
            simple_live_app/build/dist/*/*.dmg
            simple_live_app/build/dist/*/*.zip

      - run: echo "🍏 macOS job status is ${{ job.status }}."
